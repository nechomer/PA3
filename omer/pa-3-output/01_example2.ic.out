added library class!
finished building Symbol Table!
finished building Type Table Builder!

Global Symbol Table: 01_example2.ic
    Class: A
    Class: B
    Class: C
Children tables: A, C

Class Symbol Table: A
    Field: string str
    Field: int i
    Static method: sfunc {boolean -> int}
    Virtual method: vfunc {A, int, int -> void}
Children tables: sfunc, vfunc, B

Method Symbol Table: sfunc
    Parameter: boolean b
Children tables: statement block in sfunc, statement block in sfunc

Statement Block Symbol Table ( located in sfunc )
Children tables: statement block in statement block in sfunc

Statement Block Symbol Table ( located in statement block in sfunc )
    Local variable: int k

Statement Block Symbol Table ( located in sfunc )
    Local variable: A x

Method Symbol Table: vfunc
    Parameter: A a
    Parameter: int max
    Parameter: int val
    Local variable: int[] arr
    Local variable: int i
Children tables: statement block in vfunc

Statement Block Symbol Table ( located in vfunc )

Class Symbol Table: B
    Field: int j
    Virtual method: vfunc {A, int, int -> void}
Children tables: vfunc

Method Symbol Table: vfunc
    Parameter: A a
    Parameter: int max
    Parameter: int val

Class Symbol Table: C
    Static method: main {string[] -> void}
Children tables: main

Method Symbol Table: main
    Parameter: string[] args
    Local variable: A[][] a

Type Table: 01_example2.ic
    1: Primitive type: string
    2: Primitive type: int
    3: Primitive type: boolean
    5: Primitive type: void
    7: Primitive type: null
    9: Class: A
    10: Class: B, Superclass ID: 9
    15: Class: C
    6: Array type: int[]
    11: Array type: string[]
    12: Array type: A[]
    13: Array type: A[][]
    4: Method type: {boolean -> int}
    8: Method type: {A, int, int -> void}
    14: Method type: {string[] -> void}

