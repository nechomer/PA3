Parsed -Linput/including_Library/libic.sig successfully!
Parsed Sieve.ic successfully!

Abstract Syntax Tree: -Linput/including_Library/libic.sig

1: Declaration of class: Library, Type: Library, Symbol table: Global
    2: Declaration of library method: println, Type: void
        2: Parameter: s, Type: string, Symbol table: println
    3: Declaration of library method: print, Type: void
        3: Parameter: s, Type: string, Symbol table: print
    4: Declaration of library method: printi, Type: void
        4: Parameter: i, Type: int, Symbol table: printi
    5: Declaration of library method: printb, Type: void
        5: Parameter: b, Type: boolean, Symbol table: printb
    7: Declaration of library method: readi, Type: int
    8: Declaration of library method: readln, Type: string
    9: Declaration of library method: eof, Type: boolean
    11: Declaration of library method: stoi, Type: int
        11: Parameter: s, Type: string, Symbol table: stoi
        11: Parameter: n, Type: int, Symbol table: stoi
    13: Declaration of library method: itos, Type: string
        13: Parameter: i, Type: int, Symbol table: itos
    14: Declaration of library method: stoa, Type: int[]
        14: Parameter: s, Type: string, Symbol table: stoa
    15: Declaration of library method: atos, Type: string
        15: Parameter: a, Type: int[], Symbol table: atos
    17: Declaration of library method: random, Type: int
        17: Parameter: i, Type: int, Symbol table: random
    18: Declaration of library method: time, Type: int
    19: Declaration of library method: exit, Type: int
        19: Parameter: i, Type: int, Symbol table: exit

Abstract Syntax Tree: input/including_Library\Sieve.ic

1: Declaration of class: Library, Type: Library, Symbol table: Global
    2: Declaration of library method: println, Type: void
        2: Parameter: s, Type: string, Symbol table: println
    3: Declaration of library method: print, Type: void
        3: Parameter: s, Type: string, Symbol table: print
    4: Declaration of library method: printi, Type: void
        4: Parameter: i, Type: int, Symbol table: printi
    5: Declaration of library method: printb, Type: void
        5: Parameter: b, Type: boolean, Symbol table: printb
    7: Declaration of library method: readi, Type: int
    8: Declaration of library method: readln, Type: string
    9: Declaration of library method: eof, Type: boolean
    11: Declaration of library method: stoi, Type: int
        11: Parameter: s, Type: string, Symbol table: stoi
        11: Parameter: n, Type: int, Symbol table: stoi
    13: Declaration of library method: itos, Type: string
        13: Parameter: i, Type: int, Symbol table: itos
    14: Declaration of library method: stoa, Type: int[]
        14: Parameter: s, Type: string, Symbol table: stoa
    15: Declaration of library method: atos, Type: string
        15: Parameter: a, Type: int[], Symbol table: atos
    17: Declaration of library method: random, Type: int
        17: Parameter: i, Type: int, Symbol table: random
    18: Declaration of library method: time, Type: int
    19: Declaration of library method: exit, Type: int
        19: Parameter: i, Type: int, Symbol table: exit
14: Declaration of class: Sieve, Type: Sieve, Symbol table: Global
    16: Declaration of field: num, Type: int[], Symbol table: Sieve
    18: Declaration of virtual method: initArray, Type: { -> void}, Symbol table: Sieve
        19: Declaration of local variable: i, with initial value, Type: int, Symbol table: initArray
            19: Integer literal: 0, Type: int, Symbol table: initArray
        20: While statement, Symbol table: initArray
            20: Logical binary operation: less than, Type: boolean, Symbol table: initArray
                20: Reference to variable: i, Type: int, Symbol table: initArray
                20: Reference to array length
                  20: Reference to variable: num, Type: int[], Symbol table: initArray
            20: Block of statements, Symbol table: initArray
                21: Assignment statement, Symbol table: statement block in initArray
                    21: Reference to array, Type: int, Symbol table: statement block in initArray
                        21: Reference to variable: num, Type: int[], Symbol table: statement block in initArray
                        21: Reference to variable: i, Type: int, Symbol table: statement block in initArray
                    21: Reference to variable: i, Type: int, Symbol table: statement block in initArray
                22: Assignment statement, Symbol table: statement block in initArray
                    22: Reference to variable: i, Type: int, Symbol table: statement block in initArray
                    22: Mathematical binary operation: addition, Type: int, Symbol table: statement block in initArray
                        22: Reference to variable: i, Type: int, Symbol table: statement block in initArray
                        22: Integer literal: 1, Type: int, Symbol table: statement block in initArray
    26: Declaration of virtual method: sieveAll, Type: { -> void}, Symbol table: Sieve
        27: Declaration of local variable: i, with initial value, Type: int, Symbol table: sieveAll
            27: Integer literal: 2, Type: int, Symbol table: sieveAll
        28: While statement, Symbol table: sieveAll
            28: Logical binary operation: less than, Type: boolean, Symbol table: sieveAll
                28: Reference to variable: i, Type: int, Symbol table: sieveAll
                28: Reference to array length
                  28: Reference to variable: num, Type: int[], Symbol table: sieveAll
            28: Block of statements, Symbol table: sieveAll
                29: Method call statement
                  29: Call to virtual method: sieve
                      29: Reference to variable: i, Type: int, Symbol table: statement block in sieveAll
                30: Assignment statement, Symbol table: statement block in sieveAll
                    30: Reference to variable: i, Type: int, Symbol table: statement block in sieveAll
                    30: Mathematical binary operation: addition, Type: int, Symbol table: statement block in sieveAll
                        30: Reference to variable: i, Type: int, Symbol table: statement block in sieveAll
                        30: Integer literal: 1, Type: int, Symbol table: statement block in sieveAll
    34: Declaration of virtual method: sieve, Type: {int -> void}, Symbol table: Sieve
        34: Parameter: n, Type: int, Symbol table: sieve
        35: Declaration of local variable: i, with initial value, Type: int, Symbol table: sieve
            35: Mathematical binary operation: multiplication, Type: int, Symbol table: sieve
                35: Integer literal: 2, Type: int, Symbol table: sieve
                35: Reference to variable: n, Type: int, Symbol table: sieve
        36: While statement, Symbol table: sieve
            36: Logical binary operation: less than, Type: boolean, Symbol table: sieve
                36: Reference to variable: i, Type: int, Symbol table: sieve
                36: Reference to array length
                  36: Reference to variable: num, Type: int[], Symbol table: sieve
            36: Block of statements, Symbol table: sieve
                37: Assignment statement, Symbol table: statement block in sieve
                    37: Reference to array, Type: int, Symbol table: statement block in sieve
                        37: Reference to variable: num, Type: int[], Symbol table: statement block in sieve
                        37: Reference to variable: i, Type: int, Symbol table: statement block in sieve
                    37: Integer literal: 0, Type: int, Symbol table: statement block in sieve
                38: Assignment statement, Symbol table: statement block in sieve
                    38: Reference to variable: i, Type: int, Symbol table: statement block in sieve
                    38: Mathematical binary operation: addition, Type: int, Symbol table: statement block in sieve
                        38: Reference to variable: i, Type: int, Symbol table: statement block in sieve
                        38: Reference to variable: n, Type: int, Symbol table: statement block in sieve
    42: Declaration of virtual method: printPrimes, Type: { -> void}, Symbol table: Sieve
        43: Declaration of local variable: i, with initial value, Type: int, Symbol table: printPrimes
            43: Integer literal: 2, Type: int, Symbol table: printPrimes
        44: Method call statement
          44: Call to static method: print, in class Library
              44: String literal: "Primes less than ", Type: string, Symbol table: printPrimes
        45: Method call statement
          45: Call to static method: printi, in class Library
              45: Reference to array length
                45: Reference to variable: num, Type: int[], Symbol table: printPrimes
        46: Method call statement
          46: Call to static method: print, in class Library
              46: String literal: ": ", Type: string, Symbol table: printPrimes
        47: While statement, Symbol table: printPrimes
            47: Logical binary operation: less than, Type: boolean, Symbol table: printPrimes
                47: Reference to variable: i, Type: int, Symbol table: printPrimes
                47: Reference to array length
                  47: Reference to variable: num, Type: int[], Symbol table: printPrimes
            47: Block of statements, Symbol table: printPrimes
                48: If statement, Symbol table: statement block in printPrimes
                    48: Logical binary operation: inequality, Type: boolean, Symbol table: statement block in printPrimes
                        48: Reference to array, Type: int, Symbol table: statement block in printPrimes
                            48: Reference to variable: num, Type: int[], Symbol table: statement block in printPrimes
                            48: Reference to variable: i, Type: int, Symbol table: statement block in printPrimes
                        48: Integer literal: 0, Type: int, Symbol table: statement block in printPrimes
                    48: Block of statements, Symbol table: statement block in printPrimes
                        49: Method call statement
                          49: Call to static method: printi, in class Library
                              49: Reference to array, Type: int, Symbol table: statement block in statement block in printPrimes
                                  49: Reference to variable: num, Type: int[], Symbol table: statement block in statement block in printPrimes
                                  49: Reference to variable: i, Type: int, Symbol table: statement block in statement block in printPrimes
                        50: Method call statement
                          50: Call to static method: print, in class Library
                              50: String literal: " ", Type: string, Symbol table: statement block in statement block in printPrimes
                52: Assignment statement, Symbol table: statement block in printPrimes
                    52: Reference to variable: i, Type: int, Symbol table: statement block in printPrimes
                    52: Mathematical binary operation: addition, Type: int, Symbol table: statement block in printPrimes
                        52: Reference to variable: i, Type: int, Symbol table: statement block in printPrimes
                        52: Integer literal: 1, Type: int, Symbol table: statement block in printPrimes
    57: Declaration of static method: main, Type: {string[] -> void}, Symbol table: Sieve
        57: Parameter: args, Type: string[], Symbol table: main
        58: Method call statement
          58: Call to virtual method: test, in external scope
              58: Parenthesized expression
                58: Instantiation of class: Sieve, Type: Sieve, Symbol table: main
              58: Reference to variable: args, Type: string[], Symbol table: main
    61: Declaration of virtual method: test, Type: {string[] -> void}, Symbol table: Sieve
        61: Parameter: args, Type: string[], Symbol table: test
        62: Declaration of local variable: n, Type: int, Symbol table: test
        64: If statement, Symbol table: test
            64: Logical binary operation: inequality, Type: boolean, Symbol table: test
                64: Reference to array length
                  64: Reference to variable: args, Type: string[], Symbol table: test
                64: Integer literal: 1, Type: int, Symbol table: test
            64: Block of statements, Symbol table: test
                65: Method call statement
                  65: Call to static method: println, in class Library
                      65: String literal: "Unspecified number.", Type: string, Symbol table: statement block in test
                66: Return statement, Symbol table: statement block in test
        69: Method call statement
          69: Call to static method: println, in class Library
              69: String literal: "", Type: string, Symbol table: test
        70: Assignment statement, Symbol table: test
            70: Reference to variable: n, Type: int, Symbol table: test
            70: Call to static method: stoi, in class Library
                70: Reference to array, Type: string, Symbol table: test
                    70: Reference to variable: args, Type: string[], Symbol table: test
                    70: Integer literal: 0, Type: int, Symbol table: test
                70: Integer literal: 0, Type: int, Symbol table: test
        71: If statement, Symbol table: test
            71: Logical binary operation: less than or equal to, Type: boolean, Symbol table: test
                71: Reference to variable: n, Type: int, Symbol table: test
                71: Integer literal: 0, Type: int, Symbol table: test
            71: Block of statements, Symbol table: test
                72: Method call statement
                  72: Call to static method: println, in class Library
                      72: String literal: "Invalid array length", Type: string, Symbol table: statement block in test
                73: Return statement, Symbol table: statement block in test
        75: Assignment statement, Symbol table: test
            75: Reference to variable: num, Type: int[], Symbol table: test
            75: Array allocation, Type: int[], Symbol table: test
                75: Reference to variable: n, Type: int, Symbol table: test
        77: Method call statement
          77: Call to virtual method: initArray
        78: Method call statement
          78: Call to virtual method: sieveAll
        79: Method call statement
          79: Call to virtual method: printPrimes
        80: Method call statement
          80: Call to static method: println, in class Library
              80: String literal: "", Type: string, Symbol table: test
