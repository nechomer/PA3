Parsed 04_While_regular.ic successfully!

<<<<<<< HEAD
Abstract Syntax Tree: input\04_While_regular.ic

1: Declaration of class: Test, Type: Test, Symbol table: Global
    3: Declaration of virtual method: foo, Type: {int, boolean -> int}, Symbol table: Test
        3: Parameter: a, Type: int, Symbol table: foo
        3: Parameter: b, Type: boolean, Symbol table: foo
        4: While statement, Symbol table: foo
            4: Boolean literal: true, Type: boolean, Symbol table: foo
            5: Break statement, Symbol table: foo
        6: Return statement, with return value, Symbol table: foo
          6: Integer literal: 0, Type: int, Symbol table: foo
    9: Declaration of static method: main, Type: {string[] -> void}, Symbol table: Test
        9: Parameter: args, Type: string[], Symbol table: main
=======
Global Symbol Table: 04_While_regular.ic
    Class: Test
Children tables: Test

Class Symbol Table: Test
    Virtual method: foo {int, boolean -> int}
    Static method: main {string[] -> void}
Children tables: foo, main

Method Symbol Table: foo
    Parameter: int a
    Parameter: boolean b

Method Symbol Table: main
    Parameter: string[] args

Type Table: 04_While_regular.ic
    1: Primitive type: int
    2: Primitive type: boolean
    4: Primitive type: void
    7: Class: Test
    5: Array type: string[]
    3: Method type: {int, boolean -> int}
    6: Method type: {string[] -> void}

>>>>>>> origin/master
