	•	code structure  we made 3 different classes implementing “visitor”:  SymbolTableBuilder - builds the symbol table. arranges the scopes of the program, classes, methods etc. hierarchly.  TypeTabelBuilder - builds the type table. constructs a formal representation of the types being used in the program by order of appearance.  SemanticChecker - check the code for semantic errors. including all definitions being given by PA3, and a bonus check for “a method with a non-void return type returns a value on every control path”.  to support our classes above we constructed a class called FrameScope. the class acts as the scope of each node of the AST, and by that obeys the hierarchy rules. it posses all necessary scope details of the scope such as methods, fields, local variables etc. each scope is defined differently according to his scope type as in Section 10 of the IC specification.